{"version":3,"sources":["../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js"],"names":["module","exports","key","this","__data__","has","ListCache","__webpack_require__","Map","MapCache","LARGE_ARRAY_SIZE","value","data","pairs","length","push","size","set","isFunction","isMasked","isObject","toSource","reIsHostCtor","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","reIsNative","RegExp","call","replace","test","Symbol","nativeObjectToString","symToStringTag","toStringTag","undefined","isOwn","tag","unmasked","e","result","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","func","object","Hash","hash","map","string","hashClear","hashDelete","hashGet","hashHas","hashSet","entries","index","clear","entry","get","nativeCreate","HASH_UNDEFINED","getMapData","type","setCacheAdd","setCacheHas","SetCache","values","add","array","predicate","cache","Uint8Array","eq","equalArrays","mapToArray","setToArray","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","other","bitmask","customizer","equalFunc","stack","byteLength","byteOffset","buffer","name","message","convert","isPartial","stacked","Array","forEach","getAllKeys","objProps","objLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","baseGetAllKeys","getSymbols","arrayPush","isArray","keysFunc","symbolsFunc","offset","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isArguments","isBuffer","isIndex","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","n","iteratee","baseGetTag","isObjectLike","argsTag","isLength","typedArrayTags","freeGlobal","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","arg","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","getNative","baseAssignValue","keyBy","createAggregator","defineProperty","configurable","enumerable","writable","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","collection","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","noCustomizer","srcValue","isStrictComparable","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","charCodeAt","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","TypeError","memoized","args","arguments","apply","Cache","baseToString","arrayMap","isSymbol","INFINITY","symbolToString","baseHasIn","hasPath","castPath","hasFunc","baseProperty","basePropertyDeep","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","inverse","a","bool","color","body","outline","className","cssModule","innerRef","oneOfType","Card","Tag","attributes","classes","createElement","ref","defaultProps","__webpack_exports__","CardBody","freeSelf","self","root","baseIsNative","getValue","d","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","_objectWithoutProperties","obj","indexOf","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","concat","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","destroy","render","_props3","id","onClick","Component","isRequired","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isKeyable","webpackPolyfill","deprecate","paths","children","l","baseIsEqualDeep","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","slice","pair","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","isNullOrUndef","substr","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othIndex","baseIsArguments","stubFalse","Buffer","reIsUint","baseIsTypedArray","baseUnary","nodeIsTypedArray","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalByTag","equalObjects","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf"],"mappings":"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","file":"static/js/2.1bfb752c.chunk.js","sourcesContent":["/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;"],"sourceRoot":""}